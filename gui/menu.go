package gui

import (
	"fyne.io/fyne/v2"
	"template-helper/gui/common"
	"template-helper/gui/tmpl"
	"template-helper/gui/user"
)

// Menu defines the data structure for a tutorial
type Menu struct {
	Title, Intro string
	View         func(w fyne.Window) fyne.CanvasObject
	Enable       bool
}

var (
	// Tutorials defines the metadata for each tutorial
	Menus = map[string]Menu{
		"发现": {"发现", "", common.WelcomeScreen, true},
		"canvas": {"Canvas",
			"See the canvas capabilities.",
			common.CanvasScreen,
			true,
		},
		"animations": {"Animations",
			"See how to animate components.",
			common.MakeAnimationScreen,
			true,
		},
		"icons": {"Theme Icons",
			"Browse the embedded icons.", common.IconScreen,
			true,
		},
		"containers": {"Containers",
			"Containers group other widgets and canvas objects, organising according to their layout.\n" +
				"Standard containers are illustrated in this section, but developers can also provide custom " +
				"layouts using the fyne.NewContainerWithLayout() constructor.",
			common.ContainerScreen,
			true,
		},
		"apptabs": {"AppTabs",
			"A container to help divide up an application into functional areas.",
			common.MakeAppTabsTab,
			true,
		},
		"border": {"Border",
			"A container that positions items around a central content.",
			common.MakeBorderLayout,
			true,
		},
		"box": {"Box",
			"A container arranges items in horizontal or vertical list.",
			common.MakeBoxLayout,
			true,
		},
		"center": {"Center",
			"A container to that centers child elements.",
			common.MakeCenterLayout,
			true,
		},
		"doctabs": {"DocTabs",
			"A container to display a single document from a set of many.",
			common.MakeDocTabsTab,
			true,
		},
		"grid": {"Grid",
			"A container that arranges all items in a grid.",
			common.MakeGridLayout,
			true,
		},
		"split": {"Split",
			"A split container divides the container in two pieces that the user can resize.",
			common.MakeSplitTab,
			true,
		},
		"scroll": {"Scroll",
			"A container that provides scrolling for it's content.",
			common.MakeScrollTab,
			true,
		},
		"widgets": {"Widgets",
			"In this section you can see the features available in the toolkit widget set.\n" +
				"Expand the tree on the left to browse the individual tutorial elements.",
			common.WidgetScreen,
			true,
		},
		"accordion": {"Accordion",
			"Expand or collapse content panels.",
			common.MakeAccordionTab,
			true,
		},
		"button": {"Button",
			"Simple widget for user tap handling.",
			common.MakeButtonTab,
			true,
		},
		"card": {"Card",
			"Group content and widgets.",
			common.MakeCardTab,
			true,
		},
		"entry": {"Entry",
			"Different ways to use the entry widget.",
			common.MakeEntryTab,
			true,
		},
		"form": {"Form",
			"Gathering input widgets for data submission.",
			common.MakeFormTab,
			true,
		},
		"input": {"Input",
			"A collection of widgets for user input.",
			common.MakeInputTab,
			true,
		},
		"text": {"Text",
			"Text handling widgets.",
			common.MakeTextTab,
			true,
		},
		"toolbar": {"Toolbar",
			"A row of shortcut icons for common tasks.",
			common.MakeToolbarTab,
			true,
		},
		"progress": {"Progress",
			"Show duration or the need to wait for a task.",
			common.MakeProgressTab,
			true,
		},
		"collections": {"Collections",
			"Collection widgets provide an efficient way to present lots of content.\n" +
				"The List, Table, and Tree provide a cache and re-use mechanism that make it possible to scroll through thousands of elements.\n" +
				"Use this for large data sets or for collections that can expand as users scroll.",
			common.CollectionScreen,
			true,
		},
		"list": {"List",
			"A vertical arrangement of cached elements with the same styling.",
			common.MakeListTab,
			true,
		},
		"table": {"Table",
			"A two dimensional cached collection of cells.",
			common.MakeTableTab,
			true,
		},
		"tree": {"Tree",
			"A tree based arrangement of cached elements with the same styling.",
			common.MakeTreeTab,
			true,
		},
		"gridwrap": {"GridWrap",
			"A grid based arrangement of cached elements that wraps rows to fit.",
			common.MakeGridWrapTab,
			true,
		},
		"dialogs": {"Dialogs",
			"Work with dialogs.",
			common.DialogScreen,
			true,
		},
		"windows": {"Windows",
			"Window function demo.",
			common.WindowScreen,
			false,
		},
		"binding": {"Data Binding",
			"Connecting widgets to a data source.",
			common.BindingScreen,
			true,
		},
		"advanced": {"Advanced",
			"Debug and advanced information.",
			common.AdvancedScreen,
			true,
		},
		"账户信息": {"账户信息",
			"Group content and widgets.",
			user.MakeAccountTab,
			true,
		},
		"修改密码": {"修改密码",
			"Group content and widgets.",
			user.MakePasswordTab,
			true,
		},
		"基础信息": {"基础信息",
			"Group content and widgets.",
			tmpl.MakeBasicTab,
			true,
		},
		"主机信息": {"主机信息",
			"Group content and widgets.",
			tmpl.MakeNodeListTab,
			true,
		},
		"资源信息": {"资源信息",
			"Group content and widgets.",
			tmpl.MakeResourceListTab,
			true,
		},
		"基础配置": {"基础配置",
			"Group content and widgets.",
			tmpl.MakeEnvBasicTab,
			true,
		},
		"高级配置": {"高级配置",
			"Group content and widgets.",
			tmpl.MakeEnvAdvancedTab,
			true,
		},
		"执行步骤": {"执行步骤",
			"Group content and widgets.",
			tmpl.MakeCmdTab,
			true,
		},
	}

	ImageMenuIndex = map[string][]string{
		"":            {"canvas", "animations", "icons", "widgets", "collections", "containers", "dialogs", "windows", "binding", "advanced"},
		"collections": {"list", "table", "tree", "gridwrap"},
		"containers":  {"apptabs", "border", "box", "center", "doctabs", "grid", "scroll", "split"},
		"widgets":     {"accordion", "button", "card", "entry", "form", "input", "progress", "text", "toolbar"},
	}

	AudioIndex = map[string][]string{
		"":            {"canvas", "animations", "icons", "widgets", "collections", "containers", "dialogs", "windows", "binding", "advanced"},
		"collections": {"list", "table", "tree", "gridwrap"},
		"containers":  {"apptabs", "border", "box", "center", "doctabs", "grid", "scroll", "split"},
		"widgets":     {"accordion", "button", "card", "entry", "form", "input", "progress", "text", "toolbar"},
	}

	MediaMenuIndex = map[string][]string{
		"":            {"animations", "icons", "widgets", "collections", "containers", "dialogs", "windows", "binding", "advanced"},
		"collections": {"list", "table", "tree", "gridwrap"},
		"containers":  {"apptabs", "border", "box", "center", "doctabs", "grid", "scroll", "split"},
		"widgets":     {"accordion", "button", "card", "entry", "form", "input", "progress", "text", "toolbar"},
	}
	UserMenuIndex = map[string][]string{
		"": {"修改密码"},
	}
	HomeMenuIndex = map[string][]string{
		"": {"发现"},
	}
	YamlMenuIndex = map[string][]string{
		"": {"基础信息", "主机信息", "资源信息", "基础配置", "高级配置", "执行步骤"},
	}

	MenuIndexMap = map[string]map[string][]string{
		common.HomeTab:  HomeMenuIndex,
		common.AudioTab: AudioIndex,
		common.ImageTab: ImageMenuIndex,
		common.MediaTab: MediaMenuIndex,
		common.UserTab:  UserMenuIndex,
		common.YamlTab:  YamlMenuIndex,
	}
)
